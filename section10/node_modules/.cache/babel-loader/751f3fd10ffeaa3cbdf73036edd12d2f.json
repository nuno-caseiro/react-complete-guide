{"ast":null,"code":"var _jsxFileName = \"/Users/nunocaseiro/React/Standard/01-starting-section10/src/components/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {}\n});\nexport const AuthContextProvider = () => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    children: props.childern\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/nunocaseiro/React/Standard/01-starting-section10/src/components/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","AuthContextProvider","setIsLoggedIn","logoutHandler","loginHandler","props","childern"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACpCC,EAAAA,UAAU,EAAE,KADwB;AAEpCC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAFkB,CAApB,CAApB;AAKA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AACrC,QAAM,CAACF,UAAD,EAAaG,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMO,aAAa,GAAG,MAAM;AACxBD,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD;;AAIA,QAAME,YAAY,GAAE,MAAM;AACtBF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD;;AAIA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAA,cACFG,KAAK,CAACC;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAdM;;GAAML,mB;;KAAAA,mB;AAeb,eAAeJ,WAAf","sourcesContent":["import React, {useState} from 'react'\n\nconst AuthContext = React.createContext({\n    isLoggedIn: false,\n    onLogout: () => {}\n})\n\nexport const AuthContextProvider = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    const logoutHandler = () => {\n        setIsLoggedIn(false)\n    }\n\n    const loginHandler= () => {\n        setIsLoggedIn(false)\n    }\n\n    return <AuthContext.Provider>\n        {props.childern}\n    </AuthContext.Provider>\n}\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}