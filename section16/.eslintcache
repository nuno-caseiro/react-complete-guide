[{"/Users/nunocaseiro/Train/React/react-complete-guide/section16/src/index.js":"1","/Users/nunocaseiro/Train/React/react-complete-guide/section16/src/App.js":"2","/Users/nunocaseiro/Train/React/react-complete-guide/section16/src/components/SimpleInput.js":"3","/Users/nunocaseiro/Train/React/react-complete-guide/section16/src/hooks/use-input.js":"4","/Users/nunocaseiro/Train/React/react-complete-guide/section16/src/components/BasicForm.js":"5"},{"size":142,"mtime":1616595887000,"results":"6","hashOfConfig":"7"},{"size":213,"mtime":1631184401042,"results":"8","hashOfConfig":"7"},{"size":2179,"mtime":1631184306482,"results":"9","hashOfConfig":"7"},{"size":1117,"mtime":1631186946902,"results":"10","hashOfConfig":"7"},{"size":2645,"mtime":1631185733399,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x6g1ce",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nunocaseiro/Train/React/react-complete-guide/section16/src/index.js",[],"/Users/nunocaseiro/Train/React/react-complete-guide/section16/src/App.js",["24"],"/Users/nunocaseiro/Train/React/react-complete-guide/section16/src/components/SimpleInput.js",["25","26"],"import { useState, useEffect } from \"react\";\n\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput( value => value.trim() !== '');\n\n \n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.match(/^\\S+@\\S+\\.\\S+$/) !== null)\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  } else {\n    formIsValid = false;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    resetNameInput()\n    resetEmailInput()\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          value={enteredName}\n          onBlur={nameBlurHandler}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\"> Name must not be empty</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"name\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          value={enteredEmail}\n          onBlur={emailBlurHandler}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\"> This email is invalid</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n",["27","28"],"/Users/nunocaseiro/Train/React/react-complete-guide/section16/src/hooks/use-input.js",[],"/Users/nunocaseiro/Train/React/react-complete-guide/section16/src/components/BasicForm.js",[],{"ruleId":"29","severity":1,"message":"30","line":2,"column":8,"nodeType":"31","messageId":"32","endLine":2,"endColumn":19},{"ruleId":"29","severity":1,"message":"33","line":1,"column":10,"nodeType":"31","messageId":"32","endLine":1,"endColumn":18},{"ruleId":"29","severity":1,"message":"34","line":1,"column":20,"nodeType":"31","messageId":"32","endLine":1,"endColumn":29},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},"no-unused-vars","'SimpleInput' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-global-assign","no-unsafe-negation"]